`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date:    16:02:05 12/17/2018 
// Design Name: 
// Module Name:    divider 
// Project Name: 
// Target Devices: 
// Tool versions: 
// Description: 
//
// Dependencies: 
//
// Revision: 
// Revision 0.01 - File Created
// Additional Comments: 
//
//////////////////////////////////////////////////////////////////////////////////
module divider(
 
	input clk,
	input rst_n,
	input [3:0] N,
	output reg clk_out
 
    );
 
 
reg [3:0] cnt;
 
 
always @(posedge clk or negedge rst_n)
begin
    if(!rst_n)
    begin
        cnt <= 4'b0;
        clk_out <= 1'b0;
    end
    else
    begin
        if(cnt == N/2-1)
        begin
            clk_out <= ~clk_out;
            cnt <= 4'b0;
        end
        else
        begin
            cnt <= cnt + 4'b1;
        end
    end
end
 
endmodule


//test
  `timescale 1ns / 1ps

////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer:
//
// Create Date:   20:15:10 12/18/2018
// Design Name:   divider
// Module Name:   F:/devider/test.v
// Project Name:  devider
// Target Device:  
// Tool versions:  
// Description: 
//
// Verilog Test Fixture created by ISE for module: divider
//
// Dependencies:
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
////////////////////////////////////////////////////////////////////////////////

module test;

	// Inputs
	reg clk;
	reg rst_n;
	reg [3:0] N;

	// Outputs
	wire clk_out;

	// Instantiate the Unit Under Test (UUT)
	divider uut (
		.clk(clk), 
		.rst_n(rst_n), 
		.N(N), 
		.clk_out(clk_out)
	);

	initial begin
		// Initialize Inputs
		clk = 0;
		rst_n = 0;
		N = 6;
		#10
		rst_n = 1;
		// Wait 100 ns for global reset to finish
		repeat(1000)
		begin
		clk=~clk;
      #1;
		end
		// Add stimulus here

	end
      
endmodule
